version: "3.8"
services:
  mysql:
    restart: always
    image: "mysql/mysql-server:5.7.28"
    container_name: mlflow_db
    ports:
      - "3307:3306"
    environment:
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
    volumes:
      - "mysql-volume:/var/lib/mysql"
    networks:
      - backend
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - "8081:80"
    networks:
      - backend
  mlflow:
    restart: always
    build: ./mlflow
    image: 3aak/mlflow_server
    container_name: mlflow_server
    networks:
      - frontend
      - backend
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=http://s3:${MINIO_PORT}
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    command: >
      mlflow server 
      --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE} 
      --default-artifact-root s3://${MLFLOW_BUCKET_NAME}/ 
      --host 0.0.0.0
  s3:
    image: minio/minio:latest
    container_name: s3
    volumes:
      - ./data/minio-data:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "9001:9001"
    networks:
      - backend
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_ACCESS_KEY}
    command: server /data --console-address ':9001'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  create_buckets:
    image: minio/mc
    container_name: minio_client
    depends_on:
      - s3
    networks:
      - backend
    entrypoint: >
      /bin/sh -c '
      sleep 5;
      /usr/bin/mc config host add s3 http://s3:${MINIO_PORT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_ACCESS_KEY} --api S3v4;
      [[ ! -z "`/usr/bin/mc ls s3 | grep challenge`" ]] || /usr/bin/mc mb s3/${MLFLOW_BUCKET_NAME};
      /usr/bin/mc policy download s3/${MLFLOW_BUCKET_NAME};
      exit 0;
      '
volumes:
  mysql-volume:
  minio_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge
